#!/run/current-system/sw/bin/bash
# Script to update flake inputs and rebuild the system

set -eu  # Exit on error and undefined variables
# set -x   # Uncomment for debugging

# Go to the NixOS configuration directory first
cd $HOME/nixos-config

echo "=== Step 1: Updating flake inputs ==="
echo "Checking for flake input updates..."

# Show current flake.lock info before updating
echo "Current flake.lock status:"
nix flake metadata --no-write-lock-file 2>/dev/null || echo "Could not read current metadata"

echo ""
echo "Running 'nix flake update'..."
echo "----------------------------------------"

# Run flake update and capture both output and exit code
if nix flake update; then
    echo "----------------------------------------"
    echo "‚úÖ Flake update completed successfully!"
else
    echo "‚ùå Flake update failed!"
    exit 1
fi

echo ""
echo "=== Update Summary ==="
# Show what changed (if anything)
if git diff --quiet flake.lock 2>/dev/null; then
    echo "üìÑ No changes to flake.lock - all inputs are up to date"
else
    echo "üìù Changes detected in flake.lock:"
    if command -v git >/dev/null 2>&1; then
        git diff --no-index /dev/null flake.lock 2>/dev/null | grep "^\+" | grep -v "^\+++" | head -10 || echo "Changes made to flake inputs"
    else
        echo "Git not available - unable to show detailed changes"
    fi
fi

echo ""
echo "=== Proceed with rebuild? ==="
read -p "Do you want to rebuild the system now? (y/N): " proceed_choice

case "$proceed_choice" in
    [Yy]|[Yy][Ee][Ss])
        echo "‚úì Proceeding with rebuild..."
        ;;
    *)
        echo "‚ùå Rebuild cancelled. Run this script again when you're ready to rebuild."
        echo "üí° Your flake.lock has been updated but not applied to the system yet."
        exit 0
        ;;
esac

echo ""
echo "=== Starting NixOS rebuild process ==="

# Get the current hostname of this computer
CURRENT_HOSTNAME=$(hostname)
echo "Current hostname: $CURRENT_HOSTNAME"

# Figure out which flake configuration to use based on hostname
if [ "$CURRENT_HOSTNAME" = "laptop" ]; then
    FLAKE_CONFIG="laptop"
    echo "‚úì Detected laptop system"
elif [ "$CURRENT_HOSTNAME" = "gaming-pc" ]; then
    FLAKE_CONFIG="gaming-pc"
    echo "‚úì Detected gaming PC system"
else
    # Hostname doesn't match our expected names, ask the user
    echo "‚ö† Warning: Hostname '$CURRENT_HOSTNAME' not recognized"
    echo "Available configurations:"
    echo "  1) laptop"
    echo "  2) gaming-pc"
    echo ""
    read -p "Which system is this? Enter 'laptop' or 'gaming-pc': " user_choice
    
    if [ "$user_choice" = "laptop" ] || [ "$user_choice" = "1" ]; then
        FLAKE_CONFIG="laptop"
    elif [ "$user_choice" = "gaming-pc" ] || [ "$user_choice" = "2" ]; then
        FLAKE_CONFIG="gaming-pc"
    else
        echo "‚ùå Invalid choice. Please run the script again and choose 'laptop' or 'gaming-pc'"
        exit 1
    fi
fi

echo "Using configuration: $FLAKE_CONFIG"
echo ""


echo "=== Step 2: Building NixOS configuration ==="
echo "Building with flake configuration: nixos-config#$FLAKE_CONFIG"

# Run the rebuild with better error handling
if sudo nixos-rebuild switch --flake "$HOME/nixos-config#$FLAKE_CONFIG"; then
    echo ""
    echo "‚úÖ Successfully completed system update and rebuild for $FLAKE_CONFIG!"
    echo "üéâ Your system is now up to date!"
else
    echo ""
    echo "‚ùå Rebuild failed!"
    echo "üí° Your flake.lock was updated but the system rebuild failed."
    echo "üí° You may want to check the error messages above and try again."
    exit 1
fi
